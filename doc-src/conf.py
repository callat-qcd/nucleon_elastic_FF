# -*- coding: utf-8 -*-
#
# Configuration file for the Sphinx documentation builder.
#
# This file does only contain a selection of the most common options. For a
# full list see the documentation:
# http://www.sphinx-doc.org/en/master/config

# -- Path setup --------------------------------------------------------------

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#
<<<<<<< HEAD
from os import path
import sys

ROOT_DIR = path.abspath(path.join(path.dirname(path.abspath(__file__)), path.pardir))
sys.path.insert(0, ROOT_DIR)
=======
# import os
# import sys
# sys.path.insert(0, os.path.abspath('.'))
>>>>>>> Added root commit for doc


# -- Project information -----------------------------------------------------

<<<<<<< HEAD
project = "Nucleon Elastic FF"
copyright = "2019, André Walker-Loud, Christopher Körber"
author = "André Walker-Loud, Christopher Körber"

# The short X.Y version
version = ""
# The full version, including alpha/beta/rc tags
release = ""
=======
project = 'Nucleon Elastic FF'
copyright = '2019, Andre Walker-Loud, Christopher Koerber'
author = 'Andre Walker-Loud, Christopher Koerber'

# The short X.Y version
version = ''
# The full version, including alpha/beta/rc tags
release = ''
>>>>>>> Added root commit for doc


# -- General configuration ---------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
#
# needs_sphinx = '1.0'

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = [
<<<<<<< HEAD
    "sphinx.ext.autodoc",
    "sphinx.ext.doctest",
    "sphinx.ext.intersphinx",
    "sphinx.ext.todo",
    "sphinx.ext.coverage",
    "sphinx.ext.mathjax",
    "sphinx.ext.viewcode",
    "sphinx.ext.githubpages",
]

source_parsers = {".md": "recommonmark.parser.CommonMarkParser"}

# Add any paths that contain templates here, relative to this directory.
templates_path = ["_templates"]
=======
    'sphinx.ext.autodoc',
    'sphinx.ext.doctest',
    'sphinx.ext.intersphinx',
    'sphinx.ext.todo',
    'sphinx.ext.coverage',
    'sphinx.ext.mathjax',
    'sphinx.ext.viewcode',
    'sphinx.ext.githubpages',
]

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']
>>>>>>> Added root commit for doc

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
#
<<<<<<< HEAD
source_suffix = [".rst", ".md"]


# The master toctree document.
master_doc = "index"
=======
# source_suffix = ['.rst', '.md']
source_suffix = '.rst'

# The master toctree document.
master_doc = 'index'
>>>>>>> Added root commit for doc

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = None

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This pattern also affects html_static_path and html_extra_path.
<<<<<<< HEAD
exclude_patterns = ["_build", "Thumbs.db", ".DS_Store"]
=======
exclude_patterns = ['_build', 'Thumbs.db', '.DS_Store']
>>>>>>> Added root commit for doc

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = None


# -- Options for HTML output -------------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
<<<<<<< HEAD
html_theme = "sphinx_rtd_theme"
=======
html_theme = 'alabaster'
>>>>>>> Added root commit for doc

# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
#
# html_theme_options = {}

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
<<<<<<< HEAD
html_static_path = ["_static"]
=======
html_static_path = ['_static']
>>>>>>> Added root commit for doc

# Custom sidebar templates, must be a dictionary that maps document names
# to template names.
#
# The default sidebars (for documents that don't match any pattern) are
# defined by theme itself.  Builtin themes are using these templates by
# default: ``['localtoc.html', 'relations.html', 'sourcelink.html',
# 'searchbox.html']``.
#
# html_sidebars = {}


# -- Options for HTMLHelp output ---------------------------------------------

# Output file base name for HTML help builder.
<<<<<<< HEAD
htmlhelp_basename = "NucleonElasticFFdoc"
=======
htmlhelp_basename = 'NucleonElasticFFdoc'
>>>>>>> Added root commit for doc


# -- Options for LaTeX output ------------------------------------------------

latex_elements = {
    # The paper size ('letterpaper' or 'a4paper').
    #
    # 'papersize': 'letterpaper',
<<<<<<< HEAD
    # The font size ('10pt', '11pt' or '12pt').
    #
    # 'pointsize': '10pt',
    # Additional stuff for the LaTeX preamble.
    #
    # 'preamble': '',
=======

    # The font size ('10pt', '11pt' or '12pt').
    #
    # 'pointsize': '10pt',

    # Additional stuff for the LaTeX preamble.
    #
    # 'preamble': '',

>>>>>>> Added root commit for doc
    # Latex figure (float) alignment
    #
    # 'figure_align': 'htbp',
}

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title,
#  author, documentclass [howto, manual, or own class]).
latex_documents = [
<<<<<<< HEAD
    (
        master_doc,
        "NucleonElasticFF.tex",
        "Nucleon Elastic FF Documentation",
        "Andre Walker-Loud, Christopher Koerber",
        "manual",
    )
=======
    (master_doc, 'NucleonElasticFF.tex', 'Nucleon Elastic FF Documentation',
     'Andre Walker-Loud, Christopher Koerber', 'manual'),
>>>>>>> Added root commit for doc
]


# -- Options for manual page output ------------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [
<<<<<<< HEAD
    (master_doc, "nucleonelasticff", "Nucleon Elastic FF Documentation", [author], 1)
=======
    (master_doc, 'nucleonelasticff', 'Nucleon Elastic FF Documentation',
     [author], 1)
>>>>>>> Added root commit for doc
]


# -- Options for Texinfo output ----------------------------------------------

# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
texinfo_documents = [
<<<<<<< HEAD
    (
        master_doc,
        "NucleonElasticFF",
        "Nucleon Elastic FF Documentation",
        author,
        "NucleonElasticFF",
        "One line description of project.",
        "Miscellaneous",
    )
=======
    (master_doc, 'NucleonElasticFF', 'Nucleon Elastic FF Documentation',
     author, 'NucleonElasticFF', 'One line description of project.',
     'Miscellaneous'),
>>>>>>> Added root commit for doc
]


# -- Options for Epub output -------------------------------------------------

# Bibliographic Dublin Core info.
epub_title = project

# The unique identifier of the text. This can be a ISBN number
# or the project homepage.
#
# epub_identifier = ''

# A unique identification for the text.
#
# epub_uid = ''

# A list of files that should not be packed into the epub file.
<<<<<<< HEAD
epub_exclude_files = ["search.html"]
=======
epub_exclude_files = ['search.html']
>>>>>>> Added root commit for doc


# -- Extension configuration -------------------------------------------------

# -- Options for intersphinx extension ---------------------------------------

# Example configuration for intersphinx: refer to the Python standard library.
<<<<<<< HEAD
intersphinx_mapping = {"https://docs.python.org/": None}
=======
intersphinx_mapping = {'https://docs.python.org/': None}
>>>>>>> Added root commit for doc

# -- Options for todo extension ----------------------------------------------

# If true, `todo` and `todoList` produce output, else they produce nothing.
<<<<<<< HEAD
todo_include_todos = True
=======
todo_include_todos = True
>>>>>>> Added root commit for doc
